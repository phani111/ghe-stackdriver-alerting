name: CI

on: [push, pull_request]

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Install Terraform
        run: |
          sudo rm -f /usr/local/bin/terraform
          wget https://releases.hashicorp.com/terraform/0.11.14/terraform_0.11.14_linux_amd64.zip
          sudo unzip ./terraform_0.11.14_linux_amd64.zip -d /usr/local/bin/
          sudo rm -f ./terraform_0.11.14_linux_amd64.zip
          terraform -v
      - name: Setup GCP Service Accounts
        run: |
          echo ${{ secrets.GCP_SERVICE_ACCOUNT }}| base64 --decode > /tmp/gcp-service-account.json
          echo "export GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-service-account.json" >> /tmp/.env
          echo "export GOOGLE_CREDENTIALS=/tmp/gcp-service-account.json" >> /tmp/.env
      - uses: actions/checkout@v1
      - name: Setup Terraform Vars
        run: |
          echo "export TF_VAR_slack_hook=${{ secrets.SLACK_HOOK }}" >> /tmp/.env
          echo "export TF_VAR_slack_channel=${{ secrets.SLACK_CHANNEL }}" >> /tmp/.env
          echo "export TF_VAR_support_email=${{ secrets.SUPPORT_EMAIL }}" >> /tmp/.env
          echo "export TF_VAR_branch=$(echo ${GITHUB_REF} | tr '/' '\n' | tail -1)" >> /tmp/.env
      - name: Init Terraform
        if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/stage' || github.ref == 'refs/heads/prod'
        run: |
          source /tmp/.env
          ./tf.sh init
      - name: Init Terraform (no backend)
        if: github.ref != 'refs/heads/dev' && github.ref != 'refs/heads/stage' && github.ref != 'refs/heads/prod'
        run: |
          source /tmp/.env
          ./tf.sh init -backend=false
      - name: Validate Terraform Configuration
        run: |
          source /tmp/.env
          ./tf.sh validate
      - name: Apply Terraform
        if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/stage' || github.ref == 'refs/heads/prod'
        run: |
          source /tmp/.env
          ./tf.sh apply -auto-approve
